% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_filter_by_bounds.R
\name{atl_filter_bounds}
\alias{atl_filter_bounds}
\title{Filter positions by an area.}
\usage{
atl_filter_bounds(
  data,
  x = "x",
  y = "y",
  x_range = NA,
  y_range = NA,
  sf_polygon = NULL,
  remove_inside = TRUE
)
}
\arguments{
\item{data}{A dataframe or extension which contains X and Y coordinates.}

\item{x}{The X coordinate column.}

\item{y}{The Y coordinate column.}

\item{x_range}{The range of X coordinates.}

\item{y_range}{The range of Y coordinates.}

\item{sf_polygon}{\code{sfc_*POLYGON} object which must have a defined CRS.
The polygon CRS is assumed to be appropriate for the positions as well, and
is assigned to the coordinates when determining the intersection.}

\item{remove_inside}{Whether to remove points from within the range.
Setting \code{negate = TRUE} removes positions within the bounding
box specified by the X and Y ranges.}
}
\value{
A data frame of tracking locations with attractor points removed.
}
\description{
Filters out positions lying inside or outside an area.
The area can be defined in two ways, either by its X and Y coordinate
ranges, or by an \code{sf-*POLYGON} object.
\code{MULTIPOLYGON} objects are supported by the internal function
\code{atl_within_polygon}.
}
\examples{
\dontrun{
filtered_data <- atl_filter_bounds(
  data = data,
  x = "X", y = "Y",
  x_range = c(x_min, x_max),
  y_range = c(y_min, y_max),
  sf_polygon = your_polygon,
  remove_inside = FALSE
)
}
}
\author{
Pratik R. Gupte
}
