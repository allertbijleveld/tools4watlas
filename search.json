[{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/load_and_check_data.html","id":"good-to-know","dir":"Articles","previous_headings":"","what":"Good to know","title":"Loading and checking data","text":"tools4watlas based data.table fast efficient. key feature data.table modification place, data changed without making copy. prevent (whenever desired) use function copy() make true copy data set. tools4watlas function run collections lists split() individual (tag ID) keep data separated allow easy parallel computing (necessary).","code":"library(tools4watlas) library(data.table)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/load_and_check_data.html","id":"getting-data","dir":"Articles","previous_headings":"","what":"Getting data","title":"Loading and checking data","text":"WATLAS data can either loaded local SQLite database rem remote SQL database server. , first select tags time period extract data. Use tags_watlas_all.xlsx file (including metadata tags) collaborators tags_watlas_subset.xlsx (including subset metadata) select desired tags. shown example data tools4watlas. Loading tags_watlas_subset.xlsx provide table following columns:","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/load_and_check_data.html","id":"select-the-desired-tags-and-time-period","dir":"Articles","previous_headings":"Getting data","what":"Select the desired tags and time period","title":"Loading and checking data","text":"","code":"# Load meta data all_tags_path <- system.file(   \"extdata\", \"tags_watlas_subset.xlsx\", package = \"tools4watlas\" ) all_tags <- readxl::read_excel(all_tags_path, sheet = \"tags_watlas_all\") |>   data.table()  # Subset desired tags using data.table # (For example red knots and redshank from season 2023) tags <- all_tags[season == 2023 & species %in% c(\"red knot\", \"redshank\")]$tag  # Time period for which data should be extracted form the database (in CET) from <- \"2023-10-01 12:00:00\" to <- \"2023-10-02 12:00:00\""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/load_and_check_data.html","id":"extract-data-from-local-sqlite-file","dir":"Articles","previous_headings":"Getting data","what":"Extract data from local SQLite file","title":"Loading and checking data","text":"First, path file name local SQLite database need provided. , established connection, database can queried selected tags period. load tagging data list entry data.frame data one tag.","code":"# Database connection sqlite_db <- system.file(   \"extdata\", \"watlas_example.SQLite\", package = \"tools4watlas\" ) con <- RSQLite::dbConnect(RSQLite::SQLite(), sqlite_db)  # Load data from database data_list <- lapply(   tags,   atl_get_data,   tracking_time_start = from,   tracking_time_end = to,   timezone = \"CET\",   use_connection = con )  # Close connection RSQLite::dbDisconnect(con)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/load_and_check_data.html","id":"alternatively-extract-from-remote-sql-database","dir":"Articles","previous_headings":"Getting data","what":"Alternatively, extract from remote SQL-database","title":"Loading and checking data","text":"connecting local SQLite database. example (chunk run shown) load last three days data tags season 2024. Host, database, username password specified.","code":"# Load meta data all_tags_path <- \"C:\\\\path\\\\tags_watlas_all.xlsx\" all_tags <- readxl::read_excel(all_tags_path, sheet = \"tags_watlas_all\") |>   data.table()  # Subset all tags from 2024 tags <- all_tags[season == 2024]$tagID  # Select N last days to get data from days <- 3 from <- Sys.time() - 86400 * days |> as.character() to <- Sys.time() + 3600 |> as.character()  # Load data from database data_list <- lapply(   tags,   atl_get_data,   tracking_time_start = from,   tracking_time_end = to,   timezone = \"CET\",   host = \"host\",   database = \"db\",   username = \"username\",   password = \"password\" )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/load_and_check_data.html","id":"data-explanation","dir":"Articles","previous_headings":"","what":"Data explanation","title":"Loading and checking data","text":"resulting loaded WATLAS data collection lists split tag. Loading WATLAS data provide data frame different columns representing:","code":"# Show first 5 rows of the first list data_list[[1]][1:5, ] |> knitr::kable(digits = 2)"},{"path":[]},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/load_and_check_data.html","id":"data-summary","dir":"Articles","previous_headings":"Check data","what":"Data summary","title":"Loading and checking data","text":"simply check many individuals data many positions tag date . Number positions per day tag","code":"# Bind data into one data.table data <- rbindlist(data_list, fill = TRUE) |> data.table()  # N individuals with tagging data data[, .N, tag] |> nrow() ## [1] 3 # N positions, first and last data by tag ID data[, .(   N_positions = .N,   fist_data = min(datetime),   last_data = max(datetime) ), tag] ##       tag N_positions           fist_data           last_data ##    <char>       <int>              <POSc>              <POSc> ## 1:   3040        5779 2023-10-01 10:08:39 2023-10-02 09:59:59 ## 2:   3085        3453 2023-10-01 10:00:01 2023-10-02 09:41:16 ## 3:   3086        3548 2023-10-01 10:00:01 2023-10-02 09:59:42 # add data data[, date := as.Date(datetime)] |> invisible()  # N positions by species and day data_subset <- data[, .N, by = .(tag, date)]  # Plot data library(ggplot2) library(scales) library(viridis)  ggplot(data_subset, aes(x = date, y = tag, fill = N)) +   geom_tile() +   scale_fill_viridis(     option = \"A\", discrete = FALSE, trans = \"log10\", name = \"N positions\",     breaks = trans_breaks(\"log10\", function(x) 10^x),     labels = trans_format(\"log10\", math_format(10^.x)),     direction = -1   ) +   labs(x = \"Date\", y = \"Tag\") +   theme_classic()"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"load-packages-and-data","dir":"Articles","previous_headings":"","what":"Load packages and data","title":"Plotting data","text":"vignette shows different ways plot WATLAS data. chunk code requires chunk loading data run otherwise independent.","code":"library(tools4watlas) library(data.table) library(ggplot2) library(viridis) library(RColorBrewer)  # Load example data data <- data_example"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"using-ggplot2-and-a-basemap-layer","dir":"Articles","previous_headings":"","what":"Using ggplot2 and a basemap layer","title":"Plotting data","text":"can create simple base maps study area using function atl_create_bm(). function uses data.table x- y-coordinates check required bounding box (can extended buffer meters) spatial features (polygons) land, lakes, mudflats rivers. Without adding costmized data, default data provided package. changing asp desired aspect ratio can chosen (default “16:9”). data provided function creates map around Griend specified buffer.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"map-with-points-and-tracks","dir":"Articles","previous_headings":"Using ggplot2 and a basemap layer","what":"Map with points and tracks","title":"Plotting data","text":"Points tracks basemap","code":"# Create base map bm <- atl_create_bm(data, buffer = 800)  # Plot points and tracks bm +   geom_path(     data = data, aes(x, y, colour = tag), alpha = 0.1,     show.legend = FALSE   ) +   geom_point(     data = data, aes(x, y, colour = tag), size = 0.5,     show.legend = FALSE   ) +   scale_color_brewer(palette = \"Dark2\") # for up to 8 categories # scale_color_viridis_d(option = \"H\") # for N categories"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"heatmap-of-all-positions","dir":"Articles","previous_headings":"Using ggplot2 and a basemap layer","what":"Heatmap of all positions","title":"Plotting data","text":"Heatmap positions","code":"library(scales)  # Round data to 200 m grid cells data_heatmap <- copy(data) data_heatmap[, c(\"x_round\", \"y_round\") := list(   plyr::round_any(x, 200),   plyr::round_any(y, 200) )] data_heatmap <- data_heatmap[, .N, by = c(\"x_round\", \"y_round\")]  # Plot heatmap bm +   geom_tile(     data = data_heatmap, aes(x_round, y_round, fill = N),     linewidth = 0.1, show.legend = TRUE   ) +   scale_fill_viridis(     option = \"A\", discrete = FALSE, trans = \"log10\", name = \"N positions\",     breaks = trans_breaks(\"log10\", function(x) 10^x),     labels = trans_format(\"log10\", math_format(10^.x)),     direction = -1   )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"interactive-leaflet-map-with-mapview","dir":"Articles","previous_headings":"","what":"Interactive leaflet map with mapview","title":"Plotting data","text":"useful manually checking specific data. Check details mapview website. Nopte one can change base map clicking layer symbol, example satellite image.","code":"library(mapview) library(sf)  # make data spatial d_sf <- atl_as_sf(data, additional_cols = c(\"datetime\"))  # add track d_sf_lines <- atl_as_sf(data,   additional_cols = c(\"datetime\"),   option = \"lines\" )  # Plot interactive map mapview(d_sf_lines, zcol = \"tag\", legend = FALSE) + mapview(d_sf, zcol = \"tag\")"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"static-map-with-openstreetmap","dir":"Articles","previous_headings":"","what":"Static map with OpenStreetMap","title":"Plotting data","text":"Static map satellite image","code":"library(OpenStreetMap) library(sf)  # make data spatial and transform projection to WGS 84 (used in osm) d_sf <- atl_as_sf(data, additional_cols = c(\"tag\", \"datetime\")) d_sf <- st_transform(d_sf, crs = st_crs(4326))  # get bounding box bbox <- atl_bbox(d_sf, asp = \"16:9\", buffer = 500)  # extract openstreetmap # other 'type' options are \"osm\", \"maptoolkit-topo\", \"bing\", \"stamen-toner\", # \"stamen-watercolor\", \"esri\", \"esri-topo\", \"nps\", \"apple-iphoto\", \"skobbler\"; map <- openmap(c(bbox[\"ymax\"], bbox[\"xmin\"]),   c(bbox[\"ymin\"], bbox[\"xmax\"]),   type = \"bing\", mergeTiles = TRUE )  bm <- autoplot.OpenStreetMap(map)  # transform points to Mercator and add transformed coordinates to data d_sf <- st_transform(d_sf, crs = st_crs(3857)) osm_coords <- st_coordinates(d_sf) data[, `:=`(x_osm = osm_coords[, 1], y_osm = osm_coords[, 2])]  # plot bm +   geom_path(     data = data, aes(x_osm, y_osm, colour = tag), alpha = 0.1,     show.legend = FALSE   ) +   geom_point(     data = data, aes(x_osm, y_osm, colour = tag), size = 0.5,     show.legend = FALSE   ) +   scale_color_brewer(palette = \"Dark2\") +   labs(x = \"Longitude\", y = \"Latitude\") +   coord_sf(crs = 3857)"},{"path":[]},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"plot-with-simple-base-map","dir":"Articles","previous_headings":"Base R map","what":"Plot with simple base map","title":"Plotting data","text":"plotting region can extended specifiying buffer (meters), scale scalebar (kilometers) can adjusted. inspect localizations, color_by can specified colour localizations time since first localization plot (“time”), standard deviation x- y-coordinate (“sd”), number base stations used calculating localization (“nbs”). specifiying full path file name (extension) fullname, possible save plot .png. necesarry, legend can also located elsewhere plot Legend.","code":"# Load example data data <- data_example  # Transform to sf d_sf <- atl_as_sf(data, additional_cols = names(data))  # Plot the tracking data with a simple background atl_plot_tag(   data = d_sf, tag = NULL, fullname = NULL, buffer = 1,   color_by = \"time\" ) ## [1] \"Ensure that data has the UTM 31N coordinate reference system.\" # Note: function opens device and therefore the plot is not shown in markdown"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/plot_data.html","id":"plot-with-openstreetmap","dir":"Articles","previous_headings":"Base R map","what":"Plot with OpenStreetMap","title":"Plotting data","text":"function atl_plot_tag_osm() possible plot track satellite image library OpenStreetMap. region satellite image can extended specifying buffer (meters) function atl_bbox options similar atl_plot_tag (see earlier).","code":"library(OpenStreetMap) library(sf)  # Load example data data <- data_example[tag == data_example[1, tag]]  # make data spatial and transform projection to WGS 84 (used in osm) d_sf <- atl_as_sf(data, additional_cols = names(data)) d_sf <- st_transform(d_sf, crs = st_crs(4326))  # get bounding box bbox <- atl_bbox(d_sf, buffer = 500)  # extract openstreetmap # other 'type' options are \"osm\", \"maptoolkit-topo\", \"bing\", \"stamen-toner\", # \"stamen-watercolor\", \"esri\", \"esri-topo\", \"nps\", \"apple-iphoto\", \"skobbler\"; map <- openmap(c(bbox[\"ymax\"], bbox[\"xmin\"]),   c(bbox[\"ymin\"], bbox[\"xmax\"]),   type = \"bing\", mergeTiles = TRUE )  # Plot the tracking data on the satellite image atl_plot_tag_osm(   data = d_sf, tag = NULL, mapID = map, color_by = \"time\",   fullname = NULL, scalebar = 3 )  # Note: function opens device and therefore the plot is not shown in markdown"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/process_data.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the data","title":"Processing data","text":"procedure described detail vignette Load check data. Please run vignette first, chunks run .","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/process_data.html","id":"calculate-speed","dir":"Articles","previous_headings":"","what":"Calculate speed","title":"Processing data","text":"data interest, basic variables can calculated, instance, calculating speeds turning angles consecutive localizations. Speed can used filtering potentially erroneous localizations. Look distribution data: Distribution flight speeds","code":"# Transform the lists to data.tables lapply(data_list, setDT)  # Calculate speed lapply(data_list, function(dt) {   dt[, `:=`(     speed_in = atl_get_speed(dt, type = \"in\"),     speed_out = atl_get_speed(dt, type = \"out\")   )] }) library(ggplot2)  # Unlist to data.table data <- rbindlist(data_list, fill = TRUE)  # plot speed (subset relevant range) ggplot(data = data[!is.na(speed_in) & speed_in > 5 & speed_in < 100]) +   geom_histogram(aes(x = speed_in), bins = 50) +   labs(x = \"Speed in (m/s)\") +   theme_bw()"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/process_data.html","id":"filter-by-the-variance-of-coordinates-and-speed","dir":"Articles","previous_headings":"","what":"Filter by the variance of coordinates and speed","title":"Processing data","text":"next step remove localization errors, instance, applying basic filtering variances estimating x- y-coordinates speed. plot see unrealistic speeds, therefore exclude data speeds faster 35 m/s.","code":"# Filter by speed and variance var_max <- 5000 # variance in meters squared speed_max <- 35 # m/s (126 km/h)  data_list <- lapply(data_list, function(dt) {   dt <- atl_filter_covariates(     data = dt,     filters = c(       \"varx < var_max\",       \"vary < var_max\",       \"speed_in < speed_max | is.na(speed_in)\",       \"speed_out < speed_max | is.na(speed_out)\"     )   ) })"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/process_data.html","id":"smoothing","dir":"Articles","previous_headings":"","what":"Smoothing","title":"Processing data","text":"reduce error localization data, basic smoother median filter can applied. smoothing data, speeds need recalculated. now also calculate turning angles. Note: distance smoothed positions can 0 therefore produce NAs warning Look data. Smoothed track (black) top raw track (red)","code":"# Smooth the data med_filter <- 5 # number of localizations within window for smoothing  # since the function modifies in place, we shall make a copy data_smooth <- copy(data_list)  lapply(   X = data_smooth,   FUN = atl_median_smooth,   moving_window = med_filter ) # Calculate speed lapply(data_list, function(dt) {   dt[, `:=`(     speed_in = atl_get_speed(dt, type = \"in\"),     speed_out = atl_get_speed(dt, type = \"out\")   )] }) # select data from first list d1_raw <- data_list[[1]] d1_smooth <- data_smooth[[1]]  # subset first day from <- min(d1_raw[, datetime]) + 5 * 3600 to <- min(d1_raw[, datetime]) + 24 * 3600  d1_raw <- d1_raw[datetime %between% c(from, to)] d1_smooth <- d1_smooth[datetime %between% c(from, to)]  # Create basemap bm <- atl_create_bm(d1_smooth)  # Plot bm +   geom_path(data = d1_raw, aes(x, y), color = \"firebrick3\", linewidth = 0.5) +   geom_path(data = d1_smooth, aes(x, y), color = \"black\", linewidth = 0.5) +   geom_point(data = d1_raw, aes(x, y), color = \"firebrick3\", size = 1.2) +   geom_point(data = d1_smooth, aes(x, y), color = \"black\", size = 1)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/process_data.html","id":"adding-tidal-data","dir":"Articles","previous_headings":"","what":"Adding tidal data","title":"Processing data","text":"following basic steps, data ready adding environmental data, water levels.","code":"# unlist to data.table data <- rbindlist(data_smooth, fill = TRUE) setorder(data, tag, time)  # path to tide data tides_path <- system.file(   \"extdata\", \"example_2023_tide_data_UTC.csv\",   package = \"tools4watlas\" ) tide_data_highres_path <- system.file(   \"extdata\", \"example_2023_tide_data_highres_UTC.csv\",   package = \"tools4watlas\" )  # load tide data tides <- data.table::fread(tides_path) tide_data_highres <- data.table::fread(tide_data_highres_path)  # add tide data to movement data data <- atl_add_tidal_data(   data = data,   tide_data = tides,   tide_data_highres = tide_data_highres,   waterdata_resolution = \"10 minute\",   offset = 30 )  # Show first 5 rows (subset of columns to show additional ones) head(data[, .(posID, tag, datetime, tideID, tidaltime, time2lowtide,                waterlevel)]) |>   knitr::kable(digits = 2)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/articles/process_data.html","id":"data-selection","dir":"Articles","previous_headings":"","what":"Data selection","title":"Processing data","text":"specific analyses, cleaned data can selected. select localizations mudlfats available foraging, can example select low tide period -2.5 hours +2.5 hours around low tide (Bijleveld et al. 2016): Save example data tools4watlas.","code":"# check tide ID data[, tideID] |> unique() ## [1] 2023529 2023530 # Select the low tide period for a particular tide as specified by tideID data_subset <- atl_filter_covariates(   data = data,   filters = c(     \"tideID == 2023530\",     \"between(time2lowtide, -2.5 * 60, 2.5 * 60)\"   ) ) # reassign so data is data data_example <- data_subset save(data_example, file = \"./data/watlas_data_example.rda\")"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Allert Bijleveld. Author, maintainer. Pratik Gupte. Author. Christine Beardsworth. Author. Johannes Krietsch. Author.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bijleveld , Gupte P, Beardsworth C, Krietsch J (2024). tools4watlas: Tools Processing WATLAS Tracking Data. R package version 2.0, https://krietsch.github.io/tools4watlas/, https://allertbijleveld.github.io/tools4watlas/.","code":"@Manual{,   title = {tools4watlas: Tools for Processing WATLAS Tracking Data},   author = {Allert Bijleveld and Pratik Gupte and Christine Beardsworth and Johannes Krietsch},   year = {2024},   note = {R package version 2.0,     https://krietsch.github.io/tools4watlas/},   url = {https://allertbijleveld.github.io/tools4watlas/}, }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/index.html","id":"tools4watlas-","dir":"","previous_headings":"","what":"Tools for Processing WATLAS Tracking Data","title":"Tools for Processing WATLAS Tracking Data","text":"goal tools4watlas provide tools getting, processing plotting WATLAS tracking data. information WATLAS tracking system can found article published Animal Biotelemetry: WATLAS: high-throughput real-time tracking many small birds Dutch Wadden Sea. Visit https://www.nioz.nl/watlas follow tracked birds real time. package tools4watlas builds package atlastools. pipeline coding examples cleaning high-throughput tracking data atlastools presented article Journal Animal Ecology: Guide Pre-processing High-throughput Animal Tracking Data.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Tools for Processing WATLAS Tracking Data","text":"Basic workflows use tools4watlas can found package website. Vignettes: Load check data - load check data. Process data - process data (calculate speed & angles, filter, smooth add tidal data) Plot data - plot data.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Processing WATLAS Tracking Data","text":"can install latest version tools4watlas GitHub :","code":"library(remotes) install_github(\"allertbijleveld/tools4watlas\")"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Processing WATLAS Tracking Data","text":"Example tracks","code":"library(tools4watlas) library(ggplot2)  # Load example data data <- data_example  # Create base map bm <- atl_create_bm(data, buffer = 800)  # Plot points and tracks bm +   geom_path(     data = data, aes(x, y, colour = tag), alpha = 0.1, show.legend = FALSE   ) +   geom_point(     data = data, aes(x, y, colour = tag), size = 0.5, show.legend = FALSE   )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/index.html","id":"work-in-progress","dir":"","previous_headings":"","what":"Work in progress","title":"Tools for Processing WATLAS Tracking Data","text":"examples workflows aimed processing, plotting adding environmental data WATLAS tracking data prepared. request, please contact Allert Bijleveld. working following vignettes moment: Animate movement data Residency patch analysis ’s: Background map data whole Wadden Sea Choose nice example data add examples, vignette & tests atl_add_raster_data() add species colors order articles add one adding enviromental data","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Tools for Processing WATLAS Tracking Data","text":"Many people organisations involved hosting WATLAS equipment, without WATLAS possible. therefore thank Hoogheemraadschap Hollands Noorderkwartier, Koninklijke Nederlandse Redding Maatschappij, Staatsbosbeheer, Marine Eco Analytics, Koninklijke Luchtmacht, Het Posthuys (Vlieland), Natuurmonumenten, Wetterskip Fryslan, Afsluitdijk Wadden Center, Vermilion, Rijkswaterstaat, Carl Zuhorn, Lenze Hofstee Lydia de Loos. thank Natuurmonumenten access Griend using facilities. Also, thank Hein de Vries, Klaas-Jan Daalder, Hendrik-Jan Lokhorst, Bram Fey, Wim-Jan Boon RV Navicula RV Stern, well many NIOZ staff volunteers facilitated work. particularly like thank Anita Koolhaas, Hinke Cornelis Dekinga help building receiver stations. thank Jeras de Jonge, Martin Laan, Sander Asjes, Aris van der Vis technical help, Benjamin Gnep persistently replacing broken LNA’s. Thanks Marten Tacoma visualizing tracking data real time www.nioz.nl/watlas Ingrid de Raad help posting WATLAS-related news. also thank Minerva Foundation Minerva Center Movement Ecology supporting development maintenance ATLAS systems, Yotam Orchan Yoav Bartan valuable technical assistance.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_raster_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add raster data to tracking data — atl_add_raster_data","title":"Add raster data to tracking data — atl_add_raster_data","text":"function extracts raster data (example bathymetry data) specified coordinates adds column input data.table.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_raster_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add raster data to tracking data — atl_add_raster_data","text":"","code":"atl_add_raster_data(   data = NULL,   x = \"x\",   y = \"y\",   projection = sf::st_crs(32631),   raster_data,   var_name = NULL,   new_name = NULL,   change_unit = 1 )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_raster_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add raster data to tracking data — atl_add_raster_data","text":"data data.table containing data raster values added. data.table, coerced one. x Character string specifying column name x-coordinates. Defaults \"x\". y Character string specifying column name y-coordinates. Defaults \"y\". projection coordinate reference system (CRS) spatial data input. Defaults EPSG:32631. raster_data SpatRaster object values extracted. var_name Character string specifying raster variable extract. Defaults first layer NULL. new_name Character string specifying name new column output. NULL, uses var_name. change_unit Numeric value multiply extracted raster values #'   adding data. Defaults 1.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_raster_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add raster data to tracking data — atl_add_raster_data","text":"data.table extracted raster data added new column.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_tidal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add tidal data to tracking data — atl_add_tidal_data","title":"Add tidal data to tracking data — atl_add_tidal_data","text":"Adds unique tide identifier, waterlevel, time high tide time low tide tracking data (minutes).","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_tidal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add tidal data to tracking data — atl_add_tidal_data","text":"","code":"atl_add_tidal_data(   data,   tide_data,   tide_data_highres,   waterdata_resolution = \"10 minute\",   offset = 0 )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_tidal_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add tidal data to tracking data — atl_add_tidal_data","text":"data dataframe tracking data timestamp column 'time' UTC. tide_data Data timing (UTC) low high tides output function fread package data.table. tide_data_highres Data timing (UTC) waterlevel small intervals (e.g. every 10 min) provided Rijkwaterstaat output function fread package data.table. waterdata_resolution resolution high resolution waterlevel data. used matching high resolution tidal data tracking data. Defaults 10 minutes can set differently. offset offset minutes location tidal gauge tracking area. value added timing waterdata.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_tidal_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add tidal data to tracking data — atl_add_tidal_data","text":"input data three columns added: tideID (unique number tidal periode two consecutive high tides), tidaltime (time since high tide minutes), time2lowtide (time low tide minutes), waterlevel reference NAP (cm).","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_add_tidal_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add tidal data to tracking data — atl_add_tidal_data","text":"Pratik Gupte & Allert Bijleveld & Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.frame or data.table to an simple feature (sf) object — atl_as_sf","title":"Convert a data.frame or data.table to an simple feature (sf) object — atl_as_sf","text":"function converts data.frame data.table simple feature (sf) object, allowing flexible specification x y coordinate columns. Additional attributes can also retained resulting sf object. three options = c(\"points\", \"lines\", \"table\").","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.frame or data.table to an simple feature (sf) object — atl_as_sf","text":"","code":"atl_as_sf(   data,   tag = \"tag\",   x = \"x\",   y = \"y\",   projection = sf::st_crs(32631),   additional_cols = NULL,   option = \"points\" )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.frame or data.table to an simple feature (sf) object — atl_as_sf","text":"data data.table object convertible data.table. input data containing coordinates optional attributes. tag character string representing  name column containing tag ID. x character string representing name column containing x-coordinates. Defaults \"x\". y character string representing name column containing y-coordinates. Defaults \"y\". projection object class crs representing coordinate reference system (CRS) assign resulting sf object. Defaults EPSG:32631 (WGS 84 / UTM zone 31N). additional_cols character vector specifying additional column names include resulting sf object. Defaults NULL (additional columns included). option character string \"points\" (default) returning sf points, \"lines\" return sf lines \"table\" return table sf coordinates column.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_as_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.frame or data.table to an simple feature (sf) object — atl_as_sf","text":"sf object containing specified coordinates geometry included attributes.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_as_sf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a data.frame or data.table to an simple feature (sf) object — atl_as_sf","text":"Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_as_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data.frame or data.table to an simple feature (sf) object — atl_as_sf","text":"","code":"library(data.table)  # Example data data <- data.table(   tag = c(\"A\", \"A\", \"B\", \"B\"),   x = c(10, 20, 30, 40),   y = c(50, 60, 70, 80),   value = c(100, 200, 300, 400) )  # Convert to sf points with custom CRS and retain the \"value\" column sf_points <- atl_as_sf(data,   x = \"x\", y = \"y\", tag = \"tag\",   projection = sf::st_crs(4326),   additional_cols = \"value\" ) plot(sf_points)   # Convert to sf lines sf_lines <- atl_as_sf(data, x = \"x\", y = \"y\", tag = \"tag\", option = \"lines\") plot(sf_lines)   # Convert to a data.table with coordinates column sf_table <- atl_as_sf(data, x = \"x\", y = \"y\", tag = \"tag\", option = \"table\") print(sf_table) #>       tag      geometry #>    <char>   <sfc_POINT> #> 1:      A POINT (10 50) #> 2:      A POINT (20 60) #> 3:      B POINT (30 70) #> 4:      B POINT (40 80)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bounding box with specified aspect ratio and buffer — atl_bbox","title":"Create a bounding box with specified aspect ratio and buffer — atl_bbox","text":"function generates bounding box given geometry specified aspect ratio. Additionally, allows applying buffer expand contract bounding box.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bounding box with specified aspect ratio and buffer — atl_bbox","text":"","code":"atl_bbox(geometry, asp = \"16:9\", buffer = 0)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bounding box with specified aspect ratio and buffer — atl_bbox","text":"geometry sf sfc object bounding box calculated. asp character string specifying desired aspect ratio format \"width:height\". Default \"16:9\". buffer numeric value specifying buffer distance applied bounding box. Positive values expand bounding box, negative values shrink . Default 0.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bounding box with specified aspect ratio and buffer — atl_bbox","text":"bounding box (bbox), represented named vector xmin, ymin, xmax, ymax values.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_bbox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a bounding box with specified aspect ratio and buffer — atl_bbox","text":"Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a bounding box with specified aspect ratio and buffer — atl_bbox","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  # Create a simple geometry geom <- st_as_sfc(\"POLYGON((0 0, 1 0, 1 2, 0 2, 0 0))\")  # Create a bounding box with a 16:9 aspect ratio atl_bbox(geom, asp = \"16:9\") #>      xmin      ymin      xmax      ymax  #> -1.277778  0.000000  2.277778  2.000000   # Create a bounding box with a 1:1 aspect ratio and a buffer of 0.5 units atl_bbox(geom, asp = \"1:1\", buffer = 0.5) #> xmin ymin xmax ymax  #> -1.0 -0.5  2.0  2.5"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data has required columns — atl_check_data","title":"Check data has required columns — atl_check_data","text":"internal function checks data.table required columns.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data has required columns — atl_check_data","text":"","code":"atl_check_data(data, names_expected = c(\"x\", \"y\", \"time\"))"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data has required columns — atl_check_data","text":"data tracking data check required columns. Must form data.frame similar, can handled function colnames. names_expected names expected character vector. default, checks column names x, y, time.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data has required columns — atl_check_data","text":"None. Breaks data required columns.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_check_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check data has required columns — atl_check_data","text":"Pratik R. Gupte","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_check_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check data has required columns — atl_check_data","text":"","code":"# basic (and only) use if (FALSE) { # \\dontrun{ atl_check_data(   data = data,   names_expected = c(\"x\", \"y\", \"time\") ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_create_bm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a base map with customised bounding box — atl_create_bm","title":"Create a base map with customised bounding box — atl_create_bm","text":"function creates base map using spatial data layers, allowing custom bounding boxes, aspect ratios, scale bar adjustments.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_create_bm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a base map with customised bounding box — atl_create_bm","text":"","code":"atl_create_bm(   data = NULL,   x = \"x\",   y = \"y\",   buffer = 100,   asp = \"16:9\",   land_data = tools4watlas::land_sf,   mudflats_data = tools4watlas::mudflats_sf,   lakes_data = tools4watlas::lakes_sf,   rivers_data = tools4watlas::rivers_sf,   sc_dist,   sc_location = \"br\",   sc_cex = 0.7,   sc_height = unit(0.25, \"cm\"),   sc_pad_x = unit(0.25, \"cm\"),   sc_pad_y = unit(0.5, \"cm\"),   projection = sf::st_crs(32631) )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_create_bm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a base map with customised bounding box — atl_create_bm","text":"data data.table object convertible data.table containing spatial points. Defaults single point around Griend NULL. x character string specifying column x-coordinates. Defaults \"x\". y character string specifying column y-coordinates. Defaults \"y\". buffer numeric value specifying buffer distance bounding box. Default 1000. asp character string specifying aspect ratio \"width:height\" format. Default \"16:9\". land_data sf object land polygons. Defaults land_sf. mudflats_data sf object mudflat polygons. Defaults mudflats_sf. lakes_data sf object lake polygons. Defaults lakes_sf. rivers_data sf object river polygons. Defaults rivers_sf. sc_dist Scale bar distance. Optional; calculated automatically omitted. sc_location character string specifying location scale bar. Default \"br\" (bottom right). sc_cex Numeric value scale bar text size. Default 0.7. sc_height unit object specifying height scale bar. Default unit(0.25, \"cm\"). sc_pad_x unit object specifying horizontal padding scale bar. Default unit(0.25, \"cm\"). sc_pad_y unit object specifying vertical padding scale bar. Default unit(0.5, \"cm\"). projection coordinate reference system (CRS) spatial data. Defaults EPSG:32631 (WGS 84 / UTM zone 31N). Output always UTM 31N","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_create_bm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a base map with customised bounding box — atl_create_bm","text":"ggplot2 object representing base map specified settings.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_create_bm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a base map with customised bounding box — atl_create_bm","text":"Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_create_bm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a base map with customised bounding box — atl_create_bm","text":"","code":"# Example with default settings (map around Griend) bm <- atl_create_bm(buffer = 5000) print(bm)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter positions by an area — atl_filter_bounds","title":"Filter positions by an area — atl_filter_bounds","text":"Filters positions lying inside outside area. area can defined two ways, either X Y coordinate ranges, sf-*POLYGON object. MULTIPOLYGON objects supported internal function atl_within_polygon.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter positions by an area — atl_filter_bounds","text":"","code":"atl_filter_bounds(   data,   x = \"x\",   y = \"y\",   x_range = NA,   y_range = NA,   sf_polygon = NULL,   remove_inside = TRUE )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter positions by an area — atl_filter_bounds","text":"data dataframe extension contains X Y coordinates. x X coordinate column. y Y coordinate column. x_range range X coordinates. y_range range Y coordinates. sf_polygon sfc_*POLYGON object must defined CRS. polygon CRS assumed appropriate positions well, assigned coordinates determining intersection. remove_inside Whether remove points within range. Setting negate = TRUE removes positions within bounding box specified X Y ranges.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter positions by an area — atl_filter_bounds","text":"data frame tracking locations attractor points removed.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_bounds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter positions by an area — atl_filter_bounds","text":"Pratik R. Gupte","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter positions by an area — atl_filter_bounds","text":"","code":"if (FALSE) { # \\dontrun{ filtered_data <- atl_filter_bounds(   data = data,   x = \"X\", y = \"Y\",   x_range = c(x_min, x_max),   y_range = c(y_min, y_max),   sf_polygon = your_polygon,   remove_inside = FALSE ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by position covariates — atl_filter_covariates","title":"Filter data by position covariates — atl_filter_covariates","text":"atlastools function atl_filter_covariates allows convenient filtering dataset number logical filters. function can used easily filter timestamps range, well combine simple spatial temporal filters. accepts character vector R expressions return logical vector (.e., TRUE FALSE). filtering condition interpreted context dataset supplied, used filter rows satisfy filter conditions. Users must make sure filtering variables exist dataset order avoid errors.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by position covariates — atl_filter_covariates","text":"","code":"atl_filter_covariates(data, filters = c())"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by position covariates — atl_filter_covariates","text":"data dataframe similar containing variables filtered. filters character vector filter expressions. example might \"speed < 20\". filtering variables must dataframe. function explicitly check whether filtering variables present; makes flexible, allowing expressions \"(speed, 2, 20)\", also something use risk. missing filter variables result empty data frame.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by position covariates — atl_filter_covariates","text":"dataframe filtered using filters specified.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_covariates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter data by position covariates — atl_filter_covariates","text":"Pratik R. Gupte","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_filter_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter data by position covariates — atl_filter_covariates","text":"","code":"if (FALSE) { # \\dontrun{ night_data <- atl_filter_covariates(   data = dataset,   filters = c(\"!inrange(hour, 6, 18)\") )  data_in_area <- atl_filter_covariates(   data = dataset,   filters = c(     \"between(time, t_min, t_max)\",     \"between(x, x_min, x_max)\"   ) ) filtered_data <- atl_filter_covariates(   data = data,   filters = c(     \"NBS > 3\",     \"SD < 100\",     \"between(day, 5, 8)\"   ) ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_full_tag_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full tag ID or tag ID with specific length — atl_full_tag_id","title":"Create full tag ID or tag ID with specific length — atl_full_tag_id","text":"Create full tag ID tag ID specific length","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_full_tag_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full tag ID or tag ID with specific length — atl_full_tag_id","text":"","code":"atl_full_tag_id(tag, short = FALSE, n = 4)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_full_tag_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full tag ID or tag ID with specific length — atl_full_tag_id","text":"tag Tag number (either numeric character). Maximally provide 6 digits, less work. short TRUE FALSE short long tag ID n short = TRUE, many digits short tag ID ?","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_full_tag_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create full tag ID or tag ID with specific length — atl_full_tag_id","text":"Full short tag ID character","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_full_tag_id.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create full tag ID or tag ID with specific length — atl_full_tag_id","text":"Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_full_tag_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create full tag ID or tag ID with specific length — atl_full_tag_id","text":"","code":"tag <- 123 atl_full_tag_id(tag) #> [1] \"31001000123\" atl_full_tag_id(tag, short = TRUE) #> [1] \"0123\""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from a SQLite-database — atl_get_data","title":"Get data from a SQLite-database — atl_get_data","text":"function can used obtain data local remote SQLite database. full path filename provided 'SQLiteDB', look SQLite-file locally. 'SQLiteDB' NULL establish connection remote server. also functionality use existing opened data base connection can provided 'use_connection'. instance, creating residence patches within loop tags tide ID's. establishing conncection within -loop takes long time, established connection can used.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from a SQLite-database — atl_get_data","text":"","code":"atl_get_data(   tag,   tracking_time_start,   tracking_time_end,   timezone = \"CET\",   database = \"some_database\",   host = \"some.host.nl\",   username = \"someuser\",   password = \"somepassword\",   SQLiteDB = NULL,   use_connection = NULL )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from a SQLite-database — atl_get_data","text":"tag number representing WATLAS tag (either short format e.g. 4 digits long format 11 digits). May passed character numeric, converted character. example \"31001000001\". tracking_time_start Character representation time start-point data retrieved. tracking_time_end Character time representing end point corresponding start point. timezone Timezone tracking_time_start tracking_time_end. Must valid timezone .POSIXct function. database database name host server. host server address data stored. username Username access server. password Password access server. SQLiteDB full path including filename local SQLite-database whith tracking data. argument overrules establishing connection remote host. use_connection R-object previously established connection, instance generated RMySQL::dbConnect(RMySQL::MySQL(),  user = 'username', password = 'password', dbname = 'database',  host = 'host'). argument overrules making connection local host SQLiteDB remote host.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data from a SQLite-database — atl_get_data","text":"dataframe localizations specified tag, filtered start end times. posID\t  =\tUnique number localizations  tag\t\t  =\t4 digit tag number (character)  time\t\t  =\tUNIX time (seconds)  datetime = Timestamp POSIXct (UTC)  x\t\t    =\tx-ccordinates meters (UTM 31 N)  y\t\t    =\ty-ccordinates meters (UTM 31 N)  nbs\t\t  =\tNumber Base Stations used calculating coordinates  varx\t\t  =\tVariance estimating x-coordinates  vary\t\t  =\tVariance estimating y-coordinates  covxy\t  =\tCo-variance y- y-coordinates","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get data from a SQLite-database — atl_get_data","text":"Pratik R. Gupte & Allert . Bijleveld & Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate instantaneous speed — atl_get_speed","title":"Calculate instantaneous speed — atl_get_speed","text":"Returns speed metres per time interval. time interval dependent units column specified TIME. Users apply function one individual time, ideally splittng dataframe multiple individuals list dataframes.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate instantaneous speed — atl_get_speed","text":"","code":"atl_get_speed(data, x = \"x\", y = \"y\", time = \"time\", type = c(\"in\"))"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate instantaneous speed — atl_get_speed","text":"data dataframe similar must columns specified x, y, time. x x coordinate. y y coordinate. time timestamp seconds since UNIX epoch. type type speed (incoming outgoing) return. Incoming speeds specified type = \"\", outgoing speeds type = \"\".","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate instantaneous speed — atl_get_speed","text":"vector numerics representing speed. first position assigned speed NA.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_speed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate instantaneous speed — atl_get_speed","text":"Pratik R. Gupte & Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_get_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate instantaneous speed — atl_get_speed","text":"","code":"if (FALSE) { # \\dontrun{ data$speed_in <- atl_get_speed(data,   x = \"x\", y = \"y\",   time = \"time\", type = c(\"in\") ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_median_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a median smooth to coordinates — atl_median_smooth","title":"Apply a median smooth to coordinates — atl_median_smooth","text":"Applies median smooth defined rolling window X Y coordinates data.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_median_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a median smooth to coordinates — atl_median_smooth","text":"","code":"atl_median_smooth(data, x = \"x\", y = \"y\", time = \"time\", moving_window = 5)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_median_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a median smooth to coordinates — atl_median_smooth","text":"data dataframe object returned atl_get_data, contain original columns (particularly X,Y TIME). x X coordinate. y Y coordinate. time timestamp, ideally integer. moving_window size moving window median smooth. Must odd number.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_median_smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a median smooth to coordinates — atl_median_smooth","text":"datatable class object (extends data.frame), including X,Y smoothed coordinates x_raw y_raw, raw coordinates.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_median_smooth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply a median smooth to coordinates — atl_median_smooth","text":"Pratik Gupte & Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_median_smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a median smooth to coordinates — atl_median_smooth","text":"","code":"if (FALSE) { # \\dontrun{ atl_median_smooth(   data = track_data,   x = \"x\", y = \"y\",   time = \"time\",   moving_window = 5 ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the distance between patches — atl_patch_dist","title":"Get the distance between patches — atl_patch_dist","text":"Gets linear distance first point patch last point previous patch patch - 1. Distance returned metres. function used internally functions, rarely .","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the distance between patches — atl_patch_dist","text":"","code":"atl_patch_dist(   data,   x1 = \"x_end\",   x2 = \"x_start\",   y1 = \"y_end\",   y2 = \"y_start\" )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the distance between patches — atl_patch_dist","text":"data dataframe extending class data.frame, data.table. must contain two pairs coordinates, start end X Y coordinates feature. x1 first X coordinate longitude; inter-patch distances, last coordinate (x_end) patch \\(\\). x2 second X coordinate; inter-patch distances, first coordinate (x_start) subsequent patch \\(+ 1\\). y1 first Y coordinate latitude; inter-patch distances, last coordinate (y_end) patch \\(\\). y2 second Y coordinate; inter-patch distances, first coordinate (y_start) subsequent patch \\(+ 1\\).","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the distance between patches — atl_patch_dist","text":"numeric vector length number patches, rows input dataframe. single patches, returns NA. vector elements NA, followed n-1 distances, n number rows.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_dist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the distance between patches — atl_patch_dist","text":"Pratik R. Gupte","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the distance between patches — atl_patch_dist","text":"","code":"# basic usage of atl_patch_dist if (FALSE) { # \\dontrun{ atl_patch_dist(   data = data,   x1 = \"x_end\", x2 = \"x_start\",   y1 = \"y_end\", y2 = \"y_start\" ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get residence patch data — atl_patch_summary","title":"Get residence patch data — atl_patch_summary","text":"function atl_patch_summary can used extract patch-specific summary data median coordinates, patch duration, distance travelled within patch, displacement within patch, patch area.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get residence patch data — atl_patch_summary","text":"","code":"atl_patch_summary(patch_data, which_data = \"summary\", buffer_radius = 10)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get residence patch data — atl_patch_summary","text":"patch_data data.frame nested list column raw data underlying patch. Since data.frames support nested columns, actually data.table similar extension. which_data data return. May raw data underlying patch (which_data = \"points\"), spatial features (sf-MULTIPOLYGON) object patch covariates (which_data = \"spatial\"), data.table patch covariates without geometry column (which_data = \"summary\"). buffer_radius Spatial buffer radius (metres) around points requesting sf based polygons.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get residence patch data — atl_patch_summary","text":"object type sf data.table depending data requested.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get residence patch data — atl_patch_summary","text":"Pratik R. Gupte","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_patch_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get residence patch data — atl_patch_summary","text":"","code":"if (FALSE) { # \\dontrun{ patch_summary <- atl_patch_summary(   patch_data = patches,   which_data = \"summary\",   buffer_radius = 10 ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_add_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Add tracks to plot from list — atl_plot_add_track","title":"Add tracks to plot from list — atl_plot_add_track","text":"function used plotting multiple individuals map list spatial data.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_add_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add tracks to plot from list — atl_plot_add_track","text":"","code":"atl_plot_add_track(   data,   Pch = 19,   Cex = 0.25,   Lwd = 1,   col,   Type = \"o\",   endpoint = FALSE )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_add_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add tracks to plot from list — atl_plot_add_track","text":"data spatial data frame. Pch type point plot localization Cex size point plot localization Lwd width line connect localizations col colour plotted localizations Type type graph make. instance, \"b\" points lines \"o\" simlar places points top line (gaps) endpoint Whether plot last localization individual magenta","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_add_track.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add tracks to plot from list — atl_plot_add_track","text":"Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_map_osm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a map downloaded with OpenStreetMap — atl_plot_map_osm","title":"Plot a map downloaded with OpenStreetMap — atl_plot_map_osm","text":"function used e.g. plotting multiple individuals.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_map_osm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a map downloaded with OpenStreetMap — atl_plot_map_osm","text":"","code":"atl_plot_map_osm(map, ppi = 96)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_map_osm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a map downloaded with OpenStreetMap — atl_plot_map_osm","text":"map map loaded OpenStreetMap::openmap(). ppi pixels per inch, used calculate dimensions plotting region mapID. Deafults 96.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_map_osm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a map downloaded with OpenStreetMap — atl_plot_map_osm","text":"Returns OSM background plot adding tracks.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_map_osm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a map downloaded with OpenStreetMap — atl_plot_map_osm","text":"Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_rpatches.html","id":null,"dir":"Reference","previous_headings":"","what":"Add residence patches to a plot — atl_plot_rpatches","title":"Add residence patches to a plot — atl_plot_rpatches","text":"Adds residence pattch data UTM 31N points polygons plot.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_rpatches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add residence patches to a plot — atl_plot_rpatches","text":"","code":"atl_plot_rpatches(   data,   Pch = 21,   Cex = 0.25,   Lwd = 1,   Col = 1,   Bg = NULL,   Lines = TRUE )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_rpatches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add residence patches to a plot — atl_plot_rpatches","text":"data Either sfc_Polygon dataframe tracking data Pch Corresponding graphical argument passed base plot function Cex Corresponding graphical argument passed base plot function Lwd Corresponding graphical argument passed base plot function Col Corresponding graphical argument passed base plot function Bg Corresponding graphical argument passed base plot function Lines Corresponding graphical argument passed base plot function","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_rpatches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add residence patches to a plot — atl_plot_rpatches","text":"Nothing addition current plotting device.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_rpatches.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add residence patches to a plot — atl_plot_rpatches","text":"Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot track for one individual on a simple background — atl_plot_tag","title":"Plot track for one individual on a simple background — atl_plot_tag","text":"function plots localization data one individual.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot track for one individual on a simple background — atl_plot_tag","text":"","code":"atl_plot_tag(   data,   tag = NULL,   fullname = NULL,   color_by = \"time\",   towers = NULL,   h = 7,   w = 7 * (16/9),   buffer = 1,   legend = \"topleft\",   scalebar = 5,   cex_legend = 1,   land_data = tools4watlas::land_sf,   mudflats_data = tools4watlas::mudflats_sf,   lakes_data = tools4watlas::lakes_sf,   rivers_data = tools4watlas::rivers_sf )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot track for one individual on a simple background — atl_plot_tag","text":"data dataframe tracking data. Can include multiple tags, one tag selected plotting. tag four-digit tag number character plot. Defaults plotting first tag data. fullname specified plot saved path name (include extension). Defaults NULL plotting graphics window. color_by Either \"time\", \"sd\", \"nbs\", respectively used colour localization relative time (hours), variance localizations maximum VARX VARY, Number Base Stations (NBS) used calculate localization. Defaults \"time\". towers dataframe coordinates receiver stations (named X Y). h height plot (saving) w width plot (saving) buffer Buffer around bounding box meters legend Passed legend function sets location legend plot. scalebar Length scalebar km. cex_legend size text legend. land_data sf object land polygons. Defaults land_sf. mudflats_data sf object mudflat polygons. Defaults mudflats_sf. lakes_data sf object lake polygons. Defaults lakes_sf. rivers_data sf object river polygons. Defaults rivers_sf.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot track for one individual on a simple background — atl_plot_tag","text":"Returns nothing plot.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot track for one individual on a simple background — atl_plot_tag","text":"Allert Bijleveld & Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot track for one individual on a simple background — atl_plot_tag","text":"","code":"library(tools4watlas)  # Load example data data <- data_example  # Transform to sf d_sf <- atl_as_sf(data, additional_cols = names(data))  # Plot the tracking data with a simple background atl_plot_tag(   data = d_sf, tag = NULL, fullname = NULL, buffer = 1,   color_by = \"time\" ) #> [1] \"Ensure that data has the UTM 31N coordinate reference system.\"  atl_plot_tag(   data = d_sf, tag = NULL, fullname = NULL, buffer = 1,   color_by = \"sd\" ) #> [1] \"Ensure that data has the UTM 31N coordinate reference system.\"  atl_plot_tag(   data = data, tag = NULL, fullname = NULL, buffer = 1,   color_by = \"time\" ) #> [1] \"Ensure that data has the UTM 31N coordinate reference system.\""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag_osm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot track for one individual on a OpenStreetMap satellite map — atl_plot_tag_osm","title":"Plot track for one individual on a OpenStreetMap satellite map — atl_plot_tag_osm","text":"function plots localization data one individual.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag_osm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot track for one individual on a OpenStreetMap satellite map — atl_plot_tag_osm","text":"","code":"atl_plot_tag_osm(   data,   tag = NULL,   mapID,   color_by = \"time\",   fullname = NULL,   ppi = 96,   towers = NULL,   legend = \"topleft\",   scalebar = 5,   cex_legend = 1 )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag_osm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot track for one individual on a OpenStreetMap satellite map — atl_plot_tag_osm","text":"data dataframe tracking data. Can include multiple tags, one tag selected plotting. tag four-digit tag number character plot. Defaults plotting first tag data. mapID map-object generated function OpenStreetMap::openmap(). color_by Either \"time\", \"SD\", \"NBS\", respectively used colour localization relative time (hours), variance localizations maximum VARX VARY, Number Base Stations (NBS) used calculate localization. Defaults \"time\". fullname specified plot saved path name (include extension). Defaults NULL plotting graphics window. ppi pixels per inch, used calculate dimensions plotting region mapID. Deafults 96. towers dataframe coordinates receiver stations (named X Y). legend Passed legend function sets location legend plot. scalebar Length scalebar km. cex_legend size text legend.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag_osm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot track for one individual on a OpenStreetMap satellite map — atl_plot_tag_osm","text":"Returns nothing plot.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag_osm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot track for one individual on a OpenStreetMap satellite map — atl_plot_tag_osm","text":"Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_plot_tag_osm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot track for one individual on a OpenStreetMap satellite map — atl_plot_tag_osm","text":"","code":"library(tools4watlas) library(OpenStreetMap) library(sf)  # Load example data data <- data_example[tag == data_example[1, tag]]  # make data spatial and transform projection to WGS 84 (used in osm) d_sf <- atl_as_sf(data, additional_cols = names(data)) d_sf <- st_transform(d_sf, crs = st_crs(4326))  # get bounding box bbox <- atl_bbox(d_sf, buffer = 500)  # extract openstreetmap # other 'type' options are \"osm\", \"maptoolkit-topo\", \"bing\", \"stamen-toner\", # \"stamen-watercolor\", \"esri\", \"esri-topo\", \"nps\", \"apple-iphoto\", \"skobbler\"; map <- openmap(c(bbox[\"ymax\"], bbox[\"xmin\"]),   c(bbox[\"ymin\"], bbox[\"xmax\"]),   type = \"bing\", mergeTiles = TRUE )  # Plot the tracking data on the satellite image atl_plot_tag_osm(   data = d_sf, tag = NULL, mapID = map,   color_by = \"time\", fullname = NULL, scalebar = 3 )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_res_patch_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct residence patches from position data — atl_res_patch_speed","title":"Construct residence patches from position data — atl_res_patch_speed","text":"cleaned movement track one individual time can classified residence patches using function atl_res_patch_speed. function expects specific organisation data: least following columns, X, Y, time, corresponding coordinates, time POSIXct. atl_res_patch_speed requires three parameters: (1) maximum speed threshold localizations (called max_speed), (2) distance threshold clusters positions (called lim_spat_indep), (3) time interval clusters (called lim_time_indep).Clusters formed fewer minimum number positions can excluded.exclusion clusters positions can help removing bias due short stops, short stops also interest, can included reducing min_fixes argument. Position covariates speed may also summarised patch-wise passing covariate names  summary functions character vectors summary_variables summary_functions arguments, respectively.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_res_patch_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct residence patches from position data — atl_res_patch_speed","text":"","code":"atl_res_patch_speed(   data,   max_speed = 3,   lim_spat_indep = 75,   lim_time_indep = 180,   min_fixes = 3,   min_duration = 120,   summary_variables = c(),   summary_functions = c() )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_res_patch_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct residence patches from position data — atl_res_patch_speed","text":"data dataframe class extends data.frame one individual . dataframe must contain least two spatial coordinates, X Y, temporal coordinate, time. max_speed numeric value specifying maximum speed (m/s) two coordinates considered non-transitory lim_spat_indep numeric value distance metres spatial distance two patches considered independent. lim_time_indep numeric value time minutes time difference two patches considered independent. min_fixes minimum number fixes group spatially-proximate number ponts considered preliminary residence patch. min_duration minimum duration (seconds) classifying residence patches. summary_variables Optional variables patch-wise summary values required. passed character vector. summary_functions functions summarise summary variables; must return single value, median, mean etc. passed character vector.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_res_patch_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct residence patches from position data — atl_res_patch_speed","text":"data.frame extension object. dataframe added column patch, patchdata, polygons, indicating patch identity, localization data used construct patch, polygons residence patches based lim_spat_indep. addition, columns patch summaries: nfixes, dist_in_patch, dist_bw_patch statistics based summary_variables summary_functions provided. summary variables.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_res_patch_speed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct residence patches from position data — atl_res_patch_speed","text":"Pratik R. Gupte, Christine E. Beardsworth & Allert . Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_simple_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate distances between successive localizations — atl_simple_dist","title":"Calculate distances between successive localizations — atl_simple_dist","text":"Gets euclidean distance consecutive localization coordinate reference system metres, .e., UTM systems.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_simple_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate distances between successive localizations — atl_simple_dist","text":"","code":"atl_simple_dist(data, x = \"x\", y = \"y\", lag = 1)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_simple_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate distances between successive localizations — atl_simple_dist","text":"data dataframe object extending class data.frame, must contain two coordinate columns X Y coordinates. x column name data.frame object contains numeric X coordinate. y column name data.frame object contains numeric Y coordinate. lag lag (number localizations) calculate distance","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_simple_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate distances between successive localizations — atl_simple_dist","text":"Returns vector distances consecutive points.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_simple_dist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate distances between successive localizations — atl_simple_dist","text":"Pratik R. Gupte & Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_t_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a colour transparant — atl_t_col","title":"Make a colour transparant — atl_t_col","text":"functionm make provided colour transparant.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_t_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a colour transparant — atl_t_col","text":"","code":"atl_t_col(color, percent = 50, name = NULL)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_t_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a colour transparant — atl_t_col","text":"color color make transparant. percent percentage transparancy apply . name name argument passed rgb.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_t_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a colour transparant — atl_t_col","text":"transparant color returned.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_t_col.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a colour transparant — atl_t_col","text":"Allert Bijleveld & Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_t_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a colour transparant — atl_t_col","text":"","code":"# Example with 50% transparency color_with_alpha <- atl_t_col(\"blue\", percent = 50) print(color_with_alpha) #> [1] \"#0000FF7F\"  plot(1, 1,   col = color_with_alpha, pch = 16, cex = 20,   xlab = \"X\", ylab = \"Y\", main = \"Point with Transparent Color\" )   # Example with 30% transparency color_with_alpha <- atl_t_col(\"red\", percent = 90) print(color_with_alpha) #> [1] \"#FF000019\"  plot(1, 1,   col = color_with_alpha, pch = 16, cex = 20,   xlab = \"X\", ylab = \"Y\", main = \"Point with Transparent Color\" )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_thin_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Thin tracking data by resampling or aggregation — atl_thin_data","title":"Thin tracking data by resampling or aggregation — atl_thin_data","text":"Uniformly reduce data volumes either aggregation resampling (specified method argument) interval specified seconds using interval argument. options make two important assumptions: (1) timestamps named 'time' 'datetime', (2) columns except identity columns can averaged R. 'subsample' option returns thinned dataset columns input data, 'aggregate' option drops column covxy, since propagated averaged position. options handle column 'time' differently: 'subsample' returns actual timestamp (UNIX time) sample, 'aggregate' returns mean timestamp (also UNIX time). cases, extra column, time_agg, added uniform difference element corresponding user-defined thinning interval. 'aggregate' option recognises errors named varx vary. columns present together function assumes measure error, drops columns. actually measure error, function simply returns averaged position covariates time interval. Grouping variables' names (animal identity) may passed character vector id_columns argument.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_thin_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thin tracking data by resampling or aggregation — atl_thin_data","text":"","code":"atl_thin_data(   data,   interval = 60,   id_columns = NULL,   method = c(\"subsample\", \"aggregate\") )"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_thin_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thin tracking data by resampling or aggregation — atl_thin_data","text":"data Tracking data aggregate. Must columns x y, numeric column named time, well datetime. interval interval seconds aggregate. id_columns Column names grouping columns. method data thinned subsampling aggregation. resampling (method = \"subsample\"), first position group taken. aggregation (method = \"aggregate\"), group positions' mean taken.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_thin_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thin tracking data by resampling or aggregation — atl_thin_data","text":"data.table aggregated subsampled data.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_thin_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Thin tracking data by resampling or aggregation — atl_thin_data","text":"Pratik Gupte & Allert Bijleveld & Johannes Krietsch","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_thin_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thin tracking data by resampling or aggregation — atl_thin_data","text":"","code":"library(data.table)  data <- data.table(   tag = as.character(rep(1:2, each = 10)),   time = rep(seq(1696218721, 1696218721 + 92, by = 10), 2),   x = rnorm(20, 10, 1),   y = rnorm(20, 15, 1) )  data[, datetime := as.POSIXct(time, origin = \"1970-01-01\", tz = \"UTC\")] #>        tag       time         x        y            datetime #>     <char>      <num>     <num>    <num>              <POSc> #>  1:      1 1696218721  8.599956 15.46815 2023-10-02 03:52:01 #>  2:      1 1696218731 10.255317 15.36295 2023-10-02 03:52:11 #>  3:      1 1696218741  7.562736 13.69546 2023-10-02 03:52:21 #>  4:      1 1696218751  9.994429 15.73778 2023-10-02 03:52:31 #>  5:      1 1696218761 10.621553 16.88850 2023-10-02 03:52:41 #>  6:      1 1696218771 11.148412 14.90255 2023-10-02 03:52:51 #>  7:      1 1696218781  8.178182 14.06415 2023-10-02 03:53:01 #>  8:      1 1696218791  9.752675 14.98405 2023-10-02 03:53:11 #>  9:      1 1696218801  9.755800 14.17321 2023-10-02 03:53:21 #> 10:      1 1696218811  9.717295 13.48760 2023-10-02 03:53:31 #> 11:      2 1696218721  9.446301 15.93536 2023-10-02 03:52:01 #> 12:      2 1696218731 10.628982 15.17649 2023-10-02 03:52:11 #> 13:      2 1696218741 12.065025 15.24369 2023-10-02 03:52:21 #> 14:      2 1696218751  8.369011 16.62355 2023-10-02 03:52:31 #> 15:      2 1696218761 10.512427 15.11204 2023-10-02 03:52:41 #> 16:      2 1696218771  8.136989 14.86600 2023-10-02 03:52:51 #> 17:      2 1696218781  9.477987 13.08991 2023-10-02 03:53:01 #> 18:      2 1696218791  9.947398 14.72076 2023-10-02 03:53:11 #> 19:      2 1696218801 10.542996 14.68655 2023-10-02 03:53:21 #> 20:      2 1696218811  9.085925 16.06731 2023-10-02 03:53:31 #>        tag       time         x        y            datetime  # Thin the data by aggregation with a 60-second interval thinned_aggregated <- atl_thin_data(   data = data,   interval = 60,   id_columns = \"tag\",   method = \"aggregate\" )  # Thin the data by subsampling with a 60-second interval thinned_subsampled <- atl_thin_data(   data = data,   interval = 60,   id_columns = \"tag\",   method = \"subsample\" )  # View results print(thinned_aggregated) #>       tag       time        x        y            datetime n_aggregated #>    <char>      <num>    <num>    <num>              <POSc>        <int> #> 1:      1 1696218720 9.697067 15.34257 2023-10-02 03:52:00            6 #> 2:      1 1696218780 9.350988 14.17725 2023-10-02 03:53:00            4 #> 3:      2 1696218720 9.859789 15.49285 2023-10-02 03:52:00            6 #> 4:      2 1696218780 9.763577 14.64113 2023-10-02 03:53:00            4 print(thinned_subsampled) #>       tag       time        x        y            datetime n_subsampled #>    <char>      <num>    <num>    <num>              <POSc>        <int> #> 1:      1 1696218721 8.599956 15.46815 2023-10-02 03:52:01            6 #> 2:      1 1696218781 8.178182 14.06415 2023-10-02 03:53:01            4 #> 3:      2 1696218721 9.446301 15.93536 2023-10-02 03:52:01            6 #> 4:      2 1696218781 9.477987 13.08991 2023-10-02 03:53:01            4"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_turning_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the turning angle between points — atl_turning_angle","title":"Get the turning angle between points — atl_turning_angle","text":"Gets relative heading two track segments (three localizations) using law cosines. turning angle returned degrees. Users apply function one individual time, ideally splittng dataframe multiple individuals list dataframes.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_turning_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the turning angle between points — atl_turning_angle","text":"","code":"atl_turning_angle(data, x = \"x\", y = \"y\", time = \"time\")"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_turning_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the turning angle between points — atl_turning_angle","text":"data dataframe similar must columns specified x, y, time. x x coordinate. y y coordinate. time timestamp seconds since UNIX epoch.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_turning_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the turning angle between points — atl_turning_angle","text":"vector turning angles degrees. Negative degrees indicate 'left' turns. two fewer angles number rows dataframe.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_turning_angle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the turning angle between points — atl_turning_angle","text":"Pratik R. Gupte & Allert Bijleveld","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_turning_angle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the turning angle between points — atl_turning_angle","text":"","code":"if (FALSE) { # \\dontrun{ data$angle <- atl_turning_angle(data,   x = \"x\", y = \"y\", time = \"time\" ) } # }"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_within_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect position intersections with a polygon — atl_within_polygon","title":"Detect position intersections with a polygon — atl_within_polygon","text":"Detects positions intersect sfc_*POLYGON. Tested single polygon objects.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_within_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect position intersections with a polygon — atl_within_polygon","text":"","code":"atl_within_polygon(data, x = \"x\", y = \"y\", polygon)"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_within_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect position intersections with a polygon — atl_within_polygon","text":"data dataframe similar containg least X Y coordinates. x name X coordinate, assumed default \"x\". y Y coordinate , default \"y\". polygon sfc_*POLYGON object must defined CRS. polygon CRS assumed appropriate positions well, assigned coordinates determining intersection.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/atl_within_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect position intersections with a polygon — atl_within_polygon","text":"Row numbers positions inside polygon.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/data_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from two red knots and one redshank — data_example","title":"Data from two red knots and one redshank — data_example","text":"Data two red knots one redshank","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/data_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from two red knots and one redshank — data_example","text":"","code":"data_example"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/data_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from two red knots and one redshank — data_example","text":"data.table watlas data tide data added","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/data_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from two red knots and one redshank — data_example","text":"watlas data example","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/lakes_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"OSM data lakes around Griend — lakes_sf","title":"OSM data lakes around Griend — lakes_sf","text":"OSM data lakes around Griend","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/lakes_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OSM data lakes around Griend — lakes_sf","text":"","code":"lakes_sf"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/lakes_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OSM data lakes around Griend — lakes_sf","text":"sf object used background layer function atl_create_bm()","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/lakes_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OSM data lakes around Griend — lakes_sf","text":"https://www.openstreetmap.org","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/land_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"OSM data land around Griend — land_sf","title":"OSM data land around Griend — land_sf","text":"OSM data land around Griend","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/land_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OSM data land around Griend — land_sf","text":"","code":"land_sf"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/land_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OSM data land around Griend — land_sf","text":"sf object used background layer function atl_create_bm()","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/land_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OSM data land around Griend — land_sf","text":"https://www.openstreetmap.org","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/mudflats_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"OSM data mudflats around Griend — mudflats_sf","title":"OSM data mudflats around Griend — mudflats_sf","text":"OSM data mudflats around Griend","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/mudflats_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OSM data mudflats around Griend — mudflats_sf","text":"","code":"mudflats_sf"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/mudflats_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OSM data mudflats around Griend — mudflats_sf","text":"sf object used background layer function atl_create_bm()","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/mudflats_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OSM data mudflats around Griend — mudflats_sf","text":"https://www.openstreetmap.org","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/rivers_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"OSM data rivers around Griend — rivers_sf","title":"OSM data rivers around Griend — rivers_sf","text":"OSM data rivers around Griend","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/rivers_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OSM data rivers around Griend — rivers_sf","text":"","code":"rivers_sf"},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/rivers_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OSM data rivers around Griend — rivers_sf","text":"sf object used background layer function atl_create_bm()","code":""},{"path":"https://allertbijleveld.github.io/tools4watlas/, https://krietsch.github.io/tools4watlas/reference/rivers_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OSM data rivers around Griend — rivers_sf","text":"https://www.openstreetmap.org","code":""}]
